aliases:
  - &XCODE9
    shell: /bin/bash --login -eo pipefail
    steps:
      - checkout
      - run: |
          ( export XCODE_FLAGS="-scheme Yams"
            xcodebuild ${XCODE_FLAGS} test # -sdk macosx -destination arch=x86_64
            xcodebuild ${XCODE_FLAGS} test OTHER_SWIFT_FLAGS=-DUSE_UTF8
            xcodebuild ${XCODE_FLAGS} test -sdk iphonesimulator -destination "name=iPhone 8"
            xcodebuild ${XCODE_FLAGS} test -sdk appletvsimulator -destination "name=Apple TV 4K"
            xcodebuild ${XCODE_FLAGS} build -sdk watchsimulator -destination "name=Apple Watch Series 3 - 38mm"
          ) | xcpretty -r junit
      - store_test_results:
          path: build/reports/
      - run: echo "ruby-2.3" > ~/.ruby-version
      - restore_cache:
          key: 1-gems-{{ .Environment.CIRCLE_JOB }}-{{ checksum "Gemfile.lock" }}
      - run: bundle check --path vendor/bundle || bundle install --path vendor/bundle
      - save_cache:
          key: 1-gems-{{ .Environment.CIRCLE_JOB }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run: bundle exec pod lib lint

  - &steps-for-jazzy
    - checkout
    - restore_cache:
        key: 1-gems-linux-{{ checksum "Gemfile.lock" }}
    - run: bundle check --path vendor/bundle || bundle install --path vendor/bundle
    - save_cache:
        key: 1-gems-linux-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle
    - run: swift build
    - run: sourcekitten doc --spm-module Yams>yams.json
    - run: bundle exec jazzy --clean --sourcekitten-sourcefile yams.json
    - store_artifacts:
        path: docs
    - run: |
        if ruby -rjson -e "j = JSON.parse(File.read('docs/undocumented.json')); exit j['warnings'].length != 0"; then
          echo "Undocumented declarations:"
          cat "$undocumented"
          exit 1
        fi
    - run: |
        if [ $CIRCLE_BRANCH == master ]; then
          git config --global user.email "$GH_EMAIL"
          git config --global user.name "$GH_NAME"

          git clone $CIRCLE_REPOSITORY_URL out

          cd out
          git checkout gh-pages
          git rm -rf .
          cd ..

          cp -a docs/. out/.
          cd out

          git add -A
          git commit -m "Automated deployment to GitHub Pages: ${CIRCLE_SHA1}" --allow-empty

          git push origin gh-pages
        fi

  - &steps-for-spm
    - checkout
    - run: swift test
    - run: swift test -Xswiftc -DUSE_UTF8

  - &steps-for-linux
    - checkout
    - run: swift test
    - run: swift test -Xswiftc -DUSE_UTF8
    - run: mkdir -p build/reports/
    - run: swiftlint lint --reporter junit > build/reports/junit.xml
    - store_test_results:
        path: build/reports/

  - &steps-for-linux-without-swiftlint
    - checkout
    - run: swift test
    - run: swift test -Xswiftc -DUSE_UTF8

version: 2
jobs:

  xcode_9_swift_4:
    macos:
      xcode: "9.0"
    << : *XCODE9

  xcode_9.1_swift_4.0.2:
    macos:
      xcode: "9.1.0"
    << : *XCODE9

  xcode_9.2_swift_4.0.3:
    macos:
      xcode: "9.2.0"
    << : *XCODE9

  xcode_9.3_swift_4.1:
    macos:
      xcode: "9.3.1"
    << : *XCODE9

  jazzy:
    docker:
      - image: norionomura/jazzy:0.9.3_swift-4.1.2
    steps: *steps-for-jazzy

  spm_swift_4:
    macos:
      xcode: "9.0"
    steps: *steps-for-spm

  spm_swift_4.0.2:
    macos:
      xcode: "9.1.0"
    steps: *steps-for-spm

  spm_swift_4.0.3:
    macos:
      xcode: "9.2.0"
    steps: *steps-for-spm

  spm_swift_4.1:
    macos:
      xcode: "9.3.1"
    steps: *steps-for-spm

  linux_swift_4:
    docker:
      - image: norionomura/swiftlint:swift-4.0.0
    steps: *steps-for-linux

  linux_swift_4.0.2:
    docker:
      - image: norionomura/swiftlint:swift-4.0.2
    steps: *steps-for-linux

  linux_swift_4.0.3:
    docker:
      - image: norionomura/swiftlint:swift-4.0.3
    steps: *steps-for-linux

  linux_swift_4.1.0:
    docker:
      - image: norionomura/swiftlint:swift-4.1.0
    steps: *steps-for-linux

  linux_swift_4.1.1:
    docker:
      - image: norionomura/swiftlint:swift-4.1.1
    steps: *steps-for-linux

  linux_swift_4.1.2:
    docker:
      - image: norionomura/swiftlint:swift-4.1.2
    steps: *steps-for-linux

  linux_swift_4.2:
    docker:
      - image: norionomura/swift:swift-4.2-branch
    steps: *steps-for-linux-without-swiftlint

workflows:
  version: 2
  workflow:
    jobs:
      - xcode_9_swift_4
      - xcode_9.1_swift_4.0.2
      - xcode_9.2_swift_4.0.3
      - xcode_9.3_swift_4.1
      - jazzy
      - spm_swift_4
      - spm_swift_4.0.2
      - spm_swift_4.0.3
      - spm_swift_4.1
      - linux_swift_4
      - linux_swift_4.0.2
      - linux_swift_4.0.3
      - linux_swift_4.1.0
      - linux_swift_4.1.1
      - linux_swift_4.1.2
      - linux_swift_4.2

  daily:
    triggers:
      - schedule:
          cron: "0 4 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - linux_swift_4.2
